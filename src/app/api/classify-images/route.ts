/**
 * API pour classifier les images avec l'IA
 * D√©termine si une image est : product, lifestyle, ou unwanted
 */

import { NextRequest, NextResponse } from 'next/server';
import Anthropic from '@anthropic-ai/sdk';

export const runtime = 'edge';

interface ImageAnalysis {
  imageUrl: string;
  type: 'product' | 'lifestyle' | 'other' | 'unwanted';
  confidence: number;
  reason: string;
  matches_product: boolean;
}

export async function POST(request: NextRequest) {
  try {
    console.log('üé® [Classify Images] D√©but classification');
    
    const body = await request.json();
    const { imageUrls, productName, productDescription, filterType = 'all' } = body;
    const apiKey = body.apiKey || process.env.ANTHROPIC_API_KEY;
    const model = body.model || 'claude-sonnet-4-20250514';
    
    if (!apiKey) {
      return NextResponse.json(
        { error: 'Cl√© API Anthropic non configur√©e' },
        { status: 500 }
      );
    }
    
    if (!imageUrls || imageUrls.length === 0) {
      return NextResponse.json(
        { error: 'Aucune image √† classifier' },
        { status: 400 }
      );
    }
    
    console.log(`üé® [Classify Images] ${imageUrls.length} images √† analyser`);
    console.log('üì¶ [Classify Images] Produit:', productName);
    console.log('üéØ [Classify Images] Filtre demand√©:', filterType);
    
    const anthropic = new Anthropic({ apiKey });
    
    // Instruction sp√©cifique selon le filtre
    let filterInstruction = '';
    if (filterType === 'product') {
      filterInstruction = `
FILTRE ACTIF : L'utilisateur veut UNIQUEMENT les photos produit (pack shots).
Tu dois √™tre TR√àS STRICT :
- Classe en "product" UNIQUEMENT les pack shots sur fond blanc/uni avec produit COMPLET
- Tout le reste (lifestyle, d√©tails, autres) doit √™tre class√© en "unwanted" pour √™tre supprim√©
`;
    } else if (filterType === 'lifestyle') {
      filterInstruction = `
FILTRE ACTIF : L'utilisateur veut UNIQUEMENT les photos lifestyle (mise en situation).
Tu dois √™tre TR√àS STRICT :
- Classe en "lifestyle" UNIQUEMENT les vraies mises en situation avec d√©cor/personne
- Tout le reste (pack shots, d√©tails, autres) doit √™tre class√© en "unwanted" pour √™tre supprim√©
`;
    }
    
    // Analyser toutes les images en une seule requ√™te
    const prompt = `Tu es un expert TR√àS STRICT en classification d'images produits e-commerce.

${filterInstruction}

PRODUIT √Ä ANALYSER :
Nom: ${productName}
Description: ${productDescription || 'Non fournie'}

J'ai ${imageUrls.length} images √† classifier. Pour CHAQUE image, d√©termine :

1. TYPE D'IMAGE (SOIS TR√àS STRICT) :
   - "product" : Pack shot professionnel sur fond UNI (blanc, noir, gris, ou couleur unie), produit complet visible, d√©tour√©, style catalogue
   - "lifestyle" : Photo R√âELLE avec environnement (salon, table, meuble, personne, d√©cor r√©el). Pas juste un fond color√© ou d√©grad√© !
   - "other" : D√©tails/gros plans sur une partie du produit, zoom, vue √©clat√©e, sch√©ma technique, d√©tails de ports/boutons
   - "unwanted" : Autre produit diff√©rent, logo seul, ic√¥ne, placeholder, image non pertinente

2. CORRESPONDANCE PRODUIT :
   - L'image montre-t-elle bien le produit "${productName}" ?
   - V√©rifie la forme, la couleur, les caract√©ristiques distinctives

3. CONFIANCE (0.0 √† 1.0)

R√àGLES IMPORTANTES :
- Pack shot = produit COMPLET sur fond UNI (blanc/noir/gris/couleur) ‚Üí "product"
- Zoom/d√©tail d'une PARTIE du produit ‚Üí "other"
- Photo avec environnement R√âEL (meubles, pi√®ce, d√©cor) ‚Üí "lifestyle"
- Fond color√© ou d√©grad√© SEUL sans d√©cor ‚Üí "product" (c'est un pack shot artistique)
- Autre produit (mod√®le diff√©rent) ‚Üí "unwanted"
- Logo/ic√¥ne seul ‚Üí "unwanted"

EXEMPLES CLAIRS :
‚úÖ PRODUCT :
- Sonos Sub Mini complet sur fond blanc ‚Üí "product"
- Sonos Sub Mini complet sur fond noir ‚Üí "product"
- Sonos Sub Mini sur fond rose/bleu/d√©grad√© ‚Üí "product"

‚úÖ LIFESTYLE :
- Sub Mini dans un salon avec canap√© ‚Üí "lifestyle"
- Sub Mini sur une table en bois avec livres ‚Üí "lifestyle"
- Sub Mini dans une pi√®ce r√©elle ‚Üí "lifestyle"

‚úÖ OTHER :
- Gros plan sur le port du Sub Mini ‚Üí "other"
- Vue √©clat√©e des composants ‚Üí "other"
- D√©tail du bouton/grille ‚Üí "other"

‚ùå UNWANTED :
- Sonos Sub (carr√©) alors que produit = Sub Mini (rond) ‚Üí "unwanted"
- Logo Sonos seul ‚Üí "unwanted"

RETOURNE UN JSON AVEC CE FORMAT EXACT :
{
  "analyses": [
    {
      "index": 0,
      "type": "product",
      "confidence": 0.95,
      "reason": "Pack shot sur fond blanc, produit complet visible",
      "matches_product": true
    },
    {
      "index": 1,
      "type": "other",
      "confidence": 0.88,
      "reason": "Gros plan sur connecteur HDMI du produit",
      "matches_product": true
    },
    {
      "index": 2,
      "type": "unwanted",
      "confidence": 0.90,
      "reason": "Montre le Sonos Sub (carr√©) au lieu du Sub Mini (rond)",
      "matches_product": false
    }
  ]
}

URLs des images : ${JSON.stringify(imageUrls, null, 2)}`;

    const response = await anthropic.messages.create({
      model: model,
      max_tokens: 2000,
      messages: [{
        role: 'user',
        content: prompt
      }]
    });

    const content = response.content[0];
    if (content.type !== 'text') {
      throw new Error('R√©ponse IA invalide');
    }

    // Parser la r√©ponse JSON
    const jsonText = content.text
      .replace(/```json\n?/g, '')
      .replace(/```\n?/g, '')
      .trim();

    const result = JSON.parse(jsonText);
    
    console.log('‚úÖ [Classify Images] Classification termin√©e');
    console.log('üìä [Classify Images] R√©sultats:', result.analyses?.length, 'images analys√©es');
    
    return NextResponse.json({
      success: true,
      analyses: result.analyses || [],
      timestamp: new Date().toISOString()
    });
    
  } catch (error: any) {
    console.error('‚ùå [Classify Images] Erreur:', error);
    return NextResponse.json(
      { 
        error: 'Erreur lors de la classification des images',
        details: error.message 
      },
      { status: 500 }
    );
  }
}

